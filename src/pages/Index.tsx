import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [moscowTime, setMoscowTime] = useState(new Date());
  const [vladTime, setVladTime] = useState(new Date());
  const [currencyRates] = useState({
    usd: 89.45,
    eur: 95.67,
    cny: 12.34,
    gold: 5890.50,
    platinum: 2845.30
  });
  
  const [bankRates] = useState([
    { bank: '–°–±–µ—Ä–±–∞–Ω–∫', rate: '1.5%' },
    { bank: '–í–¢–ë', rate: '1.7%' },
    { bank: '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫', rate: '1.8%' },
    { bank: '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫', rate: '2.0%' },
    { bank: '–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫', rate: '1.9%' },
    { bank: '–û—Ç–∫—Ä—ã—Ç–∏–µ', rate: '2.1%' },
    { bank: '–ü—Ä–æ–º—Å–≤—è–∑—å–±–∞–Ω–∫', rate: '2.2%' },
    { bank: '–ú–ö–ë', rate: '2.0%' },
    { bank: '–†–æ—Å–±–∞–Ω–∫', rate: '1.8%' },
    { bank: '–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫', rate: '1.6%' }
  ]);
  
  const [allBankRates] = useState([
    { bank: '–°–±–µ—Ä–±–∞–Ω–∫', rate: '1.5%' },
    { bank: '–í–¢–ë', rate: '1.7%' },
    { bank: '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫', rate: '1.8%' },
    { bank: '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫', rate: '2.0%' },
    { bank: '–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫', rate: '1.9%' },
    { bank: '–û—Ç–∫—Ä—ã—Ç–∏–µ', rate: '2.1%' },
    { bank: '–ü—Ä–æ–º—Å–≤—è–∑—å–±–∞–Ω–∫', rate: '2.2%' },
    { bank: '–ú–ö–ë', rate: '2.0%' },
    { bank: '–†–æ—Å–±–∞–Ω–∫', rate: '1.8%' },
    { bank: '–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω–±–∞–Ω–∫', rate: '1.6%' },
    { bank: '–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫', rate: '1.9%' },
    { bank: '–£–ë–†–∏–†', rate: '2.3%' },
    { bank: '–ê–ö –ë–ê–†–°', rate: '2.1%' },
    { bank: '–ë–∞–Ω–∫ –ó–µ–Ω–∏—Ç', rate: '2.4%' },
    { bank: '–°–æ–≤–∫–æ–º–±–∞–Ω–∫', rate: '2.0%' },
    { bank: '–°–∏—Ç–∏–±–∞–Ω–∫', rate: '1.8%' },
    { bank: '–ë–∞–Ω–∫ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', rate: '2.2%' },
    { bank: '–¢—Ä–∞–Ω—Å–∫–∞–ø–∏—Ç–∞–ª–±–∞–Ω–∫', rate: '2.5%' },
    { bank: '–†–æ—Å–≥–æ—Å—Å—Ç—Ä–∞—Ö –ë–∞–Ω–∫', rate: '2.3%' },
    { bank: '–ë–∞–Ω–∫ –£—Ä–∞–ª—Å–∏–±', rate: '2.4%' }
  ]);
  
  const [selectedGuaranteeType, setSelectedGuaranteeType] = useState('');
  const [federalLaw, setFederalLaw] = useState('');
  const [tenderLink, setTenderLink] = useState('');
  const [guaranteeAmount, setGuaranteeAmount] = useState('');
  const [guaranteePeriod, setGuaranteePeriod] = useState('');
  const [accessKey, setAccessKey] = useState('ba42c3d9-0cfe-43b4-816a-cbe491f04fca');
  const [isSubmitting, setIsSubmitting] = useState(false);
  
  // Typing animation states
  const [typedText, setTypedText] = useState('');
  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);
  const [isTyping, setIsTyping] = useState(true);
  
  const robotMessages = [
    "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –≥–∞—Ä–∞–Ω—Ç–∏—è–º! ü§ñ",
    "–ü–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—é –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–≤–æ–Ω–∫–æ–≤! üìû‚ùå", 
    "–ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è! ‚ú®",
    "–†–∞–±–æ—Ç–∞–µ–º —Å 30+ –±–∞–Ω–∫–∞–º–∏ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üè¶"
  ];

  const requiredDocuments = [
    { id: 'tender', name: '–†–µ–µ—Å—Ç—Ä–æ–≤—ã–π ‚Ññ —Ç–æ—Ä–≥–æ–≤/—Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫—É–ø–∫—É' },
    { id: 'balance2024', name: '–ë—É—Ö. –ë–∞–ª. –ø–æ –§1 –∏ –§2 –∑–∞ 2024–≥.' },
    { id: 'balance2025', name: '–ë—É—Ö. –ë–∞–ª. –ø–æ –§1 –∏ –§2 –∑–∞ 2 –∫–≤. 2025–≥.' },
    { id: 'lease', name: '–î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã/—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–º–µ—â–µ–Ω–∏—è' },
    { id: 'passports', name: '–ü–∞—Å–ø–æ—Ä—Ç–∞ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ —É—á—Ä–µ–¥–∏—Ç–µ–ª–µ–π' },
    { id: 'requisites', name: '–ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏' },
    { id: 'charter', name: '–£—Å—Ç–∞–≤' },
    { id: 'director', name: '–ü—Ä–∏–∫–∞–∑ + —Ä–µ—à–µ–Ω–∏–µ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –≥–µ–Ω. –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞' }
  ];

  const [uploadedFiles, setUploadedFiles] = useState<{[key: string]: File[]}>({});
  
  useEffect(() => {
    const timer = setInterval(() => {
      const now = new Date();
      setMoscowTime(new Date(now.toLocaleString("en-US", {timeZone: "Europe/Moscow"})));
      setVladTime(new Date(now.toLocaleString("en-US", {timeZone: "Asia/Vladivostok"})));
    }, 1000);
    return () => clearInterval(timer);
  }, []);

  // Typing animation effect
  useEffect(() => {
    if (currentMessageIndex >= robotMessages.length) {
      // Restart animation after a pause
      const restartTimer = setTimeout(() => {
        setCurrentMessageIndex(0);
        setTypedText('');
        setIsTyping(true);
      }, 3000);
      return () => clearTimeout(restartTimer);
    }

    const currentMessage = robotMessages[currentMessageIndex];
    
    if (typedText.length < currentMessage.length) {
      const typingTimer = setTimeout(() => {
        setTypedText(currentMessage.slice(0, typedText.length + 1));
      }, 50);
      return () => clearTimeout(typingTimer);
    } else {
      // Message complete, pause then move to next
      const pauseTimer = setTimeout(() => {
        setCurrentMessageIndex(prev => prev + 1);
        setTypedText('');
      }, 2000);
      return () => clearTimeout(pauseTimer);
    }
  }, [typedText, currentMessageIndex, robotMessages]);

  const guaranteeTypes = [
    {
      value: 'commercial',
      label: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è',
      range: '1 000 - 1 000 000 ‚ÇΩ',
      description: 'For small commercial deals',
    },
    {
      value: 'express',
      label: '–≠–∫—Å–ø—Ä–µ—Å—Å-–≥–∞—Ä–∞–Ω—Ç–∏–∏',
      range: '1 000 - 5 000 000 ‚ÇΩ',
      description: 'Fast processing within 1-2 days',
    },
    {
      value: 'standard',
      label: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏',
      range: '5 000 000 - 100 000 000 ‚ÇΩ',
      description: 'Optimal conditions for most deals',
    },
    {
      value: 'large',
      label: '–ö—Ä—É–ø–Ω—ã–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏',
      range: '–æ—Ç 100 000 000 ‚ÇΩ',
      description: 'For large-scale projects and government contracts',
    }
  ];

  const handleFileUpload = (docId: string, files: FileList | null) => {
    if (files) {
      const newFiles = Array.from(files);
      setUploadedFiles(prev => ({
        ...prev,
        [docId]: [...(prev[docId] || []), ...newFiles]
      }));
    }
  };

  const handleSubmit = async () => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞
    if (accessKey !== 'ba42c3d9-0cfe-43b4-816a-cbe491f04fca') {
      alert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π
    if (!tenderLink || !guaranteeAmount || !selectedGuaranteeType) {
      alert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    setIsSubmitting(true);
    
    try {
      // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
      const guaranteeData = {
        tenderLink,
        guaranteeAmount,
        federalLaw,
        guaranteeType: selectedGuaranteeType,
        guaranteePeriod,
        timestamp: new Date().toLocaleString('ru-RU', { 
          timeZone: 'Europe/Moscow',
          year: 'numeric',
          month: '2-digit',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit'
        })
      };

      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
      const documentsInfo = requiredDocuments.map(doc => {
        const files = uploadedFiles[doc.id] || [];
        return {
          name: doc.name,
          filesCount: files.length,
          fileNames: files.map(f => f.name)
        };
      });
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
      const emailContent = `
=== –ó–ê–Ø–í–ö–ê –ù–ê –ë–ê–ù–ö–û–í–°–ö–£–Æ –ì–ê–†–ê–ù–¢–ò–Æ ===
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ–¥–∞—á–∏: ${guaranteeData.timestamp}

–î–ê–ù–ù–´–ï –ì–ê–†–ê–ù–¢–ò–ò:
‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä: ${guaranteeData.tenderLink}
‚Ä¢ –°—É–º–º–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏: ${guaranteeData.guaranteeAmount}
‚Ä¢ –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω: ${guaranteeData.federalLaw}
‚Ä¢ –¢–∏–ø –≥–∞—Ä–∞–Ω—Ç–∏–∏: ${guaranteeData.guaranteeType}
‚Ä¢ –°—Ä–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–∏: ${guaranteeData.guaranteePeriod}

–ü–ï–†–ï–ß–ï–ù–¨ –ù–ï–û–ë–•–û–î–ò–ú–´–• –î–û–ö–£–ú–ï–ù–¢–û–í:
${documentsInfo.map(doc => 
  `‚Ä¢ ${doc.name}: ${doc.filesCount > 0 ? `${doc.filesCount} —Ñ–∞–π–ª(–æ–≤) - ${doc.fileNames.join(', ')}` : '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}`
).join('\n')}

---
–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ poehali.dev
Email –¥–ª—è —Å–≤—è–∑–∏: garantiya25@mail.ru
`;

      // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const hasFiles = Object.values(uploadedFiles).some(files => files.length > 0);
      
      if (hasFiles) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤
        const instruction = `
‚úÖ –ó–ê–Ø–í–ö–ê –ü–û–î–ì–û–¢–û–í–õ–ï–ù–ê!

üìã –î–ê–ù–ù–´–ï –û–¢–ü–†–ê–í–õ–ï–ù–´ –í –ü–û–ß–¢–û–í–´–ô –ö–õ–ò–ï–ù–¢

üìÅ –û–¢–ü–†–ê–í–ö–ê –§–ê–ô–õ–û–í - –í–´–ë–ï–†–ò–¢–ï –°–ü–û–°–û–ë:

1Ô∏è‚É£ –ß–ï–†–ï–ó –ü–û–ß–¢–û–í–´–ô –ö–õ–ò–ï–ù–¢:
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∏—Å—å–º–æ –≤ –ø–æ—á—Ç–æ–≤–æ–º –∫–ª–∏–µ–Ω—Ç–µ
   ‚Ä¢ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤—Ä—É—á–Ω—É—é
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ garantiya25@mail.ru

2Ô∏è‚É£ –ß–ï–†–ï–ó TELEGRAM:
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É + —Ñ–∞–π–ª—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É
   ‚Ä¢ @IT_business_service_selle

3Ô∏è‚É£ –ß–ï–†–ï–ó –û–ë–õ–ê–ß–ù–û–ï –•–†–ê–ù–ò–õ–ò–©–ï:
   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ / Google Drive
   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ garantiya25@mail.ru

‚ö†Ô∏è –§–ê–ô–õ–´ –ù–ï –ú–û–ì–£–¢ –ë–´–¢–¨ –û–¢–ü–†–ê–í–õ–ï–ù–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
`;
        
        alert(instruction);
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const instructionBlob = new Blob([emailContent + '\n\n' + instruction], { type: 'text/plain;charset=utf-8' });
        const instructionUrl = URL.createObjectURL(instructionBlob);
        const instructionLink = document.createElement('a');
        instructionLink.href = instructionUrl;
        instructionLink.download = `–ó–∞—è–≤–∫–∞_${Date.now()}.txt`;
        document.body.appendChild(instructionLink);
        instructionLink.click();
        document.body.removeChild(instructionLink);
        URL.revokeObjectURL(instructionUrl);
      }
      
      // –°–æ–∑–¥–∞–µ–º mailto —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const subject = encodeURIComponent('–ó–∞—è–≤–∫–∞ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é');
      const body = encodeURIComponent(emailContent);
      const mailtoLink = `mailto:garantiya25@mail.ru?subject=${subject}&body=${body}`;
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
      window.location.href = mailtoLink;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–ª—É—á–∞–µ–≤ –±–µ–∑ —Ñ–∞–π–ª–æ–≤
      if (!hasFiles) {
        setTimeout(() => {
          alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!\n\n–ü–∏—Å—å–º–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ garantiya25@mail.ru');
        }, 1000);
      }
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
      setTimeout(() => {
        setTenderLink('');
        setGuaranteeAmount('');
        setFederalLaw('');
        setSelectedGuaranteeType('');
        setGuaranteePeriod('');
        setAccessKey('ba42c3d9-0cfe-43b4-816a-cbe491f04fca');
        setUploadedFiles({});
      }, 2000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∑–∞—è–≤–∫–∏:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-yellow-100 via-yellow-200 to-yellow-300 relative">
      {/* Robot Background */}
      <div 
        className="fixed inset-0 bg-cover bg-center bg-no-repeat opacity-5 pointer-events-none"
        style={{ backgroundImage: 'url(/img/86319c3d-a117-457a-b30d-0c5a73a26cb0.jpg)' }}
      ></div>
      {/* Currency Ticker */}
      <div className="bg-bank-navy text-white py-2.5 border-b border-bank-silver">
        <div className="animate-marquee whitespace-nowrap flex space-x-12 text-sm font-medium">
          <span className="flex items-center gap-2">
            <Icon name="DollarSign" size={14} />
            USD: {currencyRates.usd} ‚ÇΩ
          </span>
          <span className="flex items-center gap-2">
            <Icon name="Euro" size={14} />
            EUR: {currencyRates.eur} ‚ÇΩ
          </span>
          <span className="flex items-center gap-2">
            <Icon name="Yen" size={14} />
            CNY: {currencyRates.cny} ‚ÇΩ
          </span>
          <span className="flex items-center gap-2">
            <Icon name="Star" size={14} />
            –ó–æ–ª–æ—Ç–æ: {currencyRates.gold} ‚ÇΩ/—É–Ω—Ü
          </span>
          <span className="flex items-center gap-2">
            <Icon name="Gem" size={14} />
            –ü–ª–∞—Ç–∏–Ω–∞: {currencyRates.platinum} ‚ÇΩ/—É–Ω—Ü
          </span>
          {bankRates.map((bank, idx) => (
            <span key={idx} className="flex items-center gap-2">
              <Icon name="Building2" size={14} />
              {bank.bank}: –æ—Ç {bank.rate}
            </span>
          ))}
        </div>
      </div>
      
      {/* Bank Rates Ticker - Reverse Direction */}
      <div className="bg-gradient-to-r from-bank-blue to-bank-navy text-white py-2.5 border-b border-bank-silver">
        <div className="animate-marquee-reverse whitespace-nowrap flex space-x-12 text-sm font-medium">
          {allBankRates.map((bank, idx) => (
            <span key={idx} className="flex items-center gap-2">
              <Icon name="TrendingDown" size={14} />
              {bank.bank}: –æ—Ç {bank.rate}
            </span>
          ))}
          {allBankRates.map((bank, idx) => (
            <span key={`repeat-${idx}`} className="flex items-center gap-2">
              <Icon name="TrendingDown" size={14} />
              {bank.bank}: –æ—Ç {bank.rate}
            </span>
          ))}
        </div>
      </div>
      
      {/* Header */}
      <header className="bg-white/90 backdrop-blur-sm shadow-md border-b-2 border-bank-silver">
        <div className="container mx-auto px-6 py-8">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <div className="p-3 bg-bank-navy rounded-lg">
                <Icon name="Building2" size={36} className="text-white" />
              </div>
              <div>
                <h1 className="text-3xl font-bold bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-600 bg-clip-text text-transparent tracking-tight">
                  –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ì–∞—Ä–∞–Ω—Ç–∏–∏ –†–£
                </h1>
                <p className="text-gray-400 font-medium">–ü–∞—Ä—Ç–Ω–µ—Ä—ã –≤–µ–¥—É—â–∏—Ö —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –±–∞–Ω–∫–æ–≤</p>
              </div>
            </div>
            <div className="flex items-center gap-6">
              <div className="bg-bank-light p-4 rounded-lg border border-bank-silver">
                <div className="text-sm space-y-2">
                  <div className="flex items-center gap-3">
                    <Icon name="Clock" size={16} className="text-bank-navy" />
                    <span className="text-bank-navy font-medium font-mono bg-black text-green-400 px-2 py-1 rounded border">
                      –ú–û–°–ö–í–ê: {moscowTime.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit', second: '2-digit' })}
                    </span>
                  </div>
                  <div className="flex items-center gap-3">
                    <Icon name="Clock" size={16} className="text-bank-slate" />
                    <span className="text-bank-slate font-medium font-mono bg-black text-green-400 px-2 py-1 rounded border">
                      –í–õ–ê–î–ò–í–û–°–¢–û–ö: {vladTime.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit', second: '2-digit' })}
                    </span>
                  </div>
                </div>
              </div>
              <Badge variant="outline" className="text-bank-green border-bank-green px-4 py-2 text-sm font-semibold">
                <Icon name="Circle" size={8} className="text-bank-green mr-2" />
                –û–Ω–ª–∞–π–Ω 24/7
              </Badge>
            </div>
          </div>
        </div>
      </header>

      <main className="container mx-auto px-6 py-12">
        {/* Info Banner */}
        <div className="max-w-6xl mx-auto mb-16">
          <Card className="bg-gradient-to-r from-bank-navy to-bank-blue text-white shadow-2xl border-0 relative overflow-hidden">
            <CardContent className="p-8 relative z-10">
              <div className="grid lg:grid-cols-2 gap-8 items-center">
                {/* Left side - Text content */}
                <div className="text-center lg:text-left space-y-6">
                  <div className="flex items-center justify-center lg:justify-start gap-3 mb-4">
                    <Icon name="Award" size={32} className="text-white" />
                    <h2 className="text-2xl font-bold text-green-400">
                      –ú—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –º–Ω–æ–≥–∏—Ö –±–∞–Ω–∫–æ–≤ –†–æ—Å—Å–∏–∏!
                    </h2>
                  </div>
                  
                  <div className="space-y-4 text-lg leading-relaxed">
                    <p>
                      –°–∞–π—Ç —Å–æ–∑–¥–∞–Ω –≤ —Ü–µ–ª—è—Ö –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—ã–ø—É—Å–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–π—Ç–∏ –æ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤, –∞ —Å—Ä–∞–∑—É –∂–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏.
                    </p>
                    <p>
                      –î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –ª–∏—à—å –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å —É–∂–µ –≥–æ—Ç–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ—Ç –±–∞–Ω–∫–æ–≤!
                    </p>
                    <div className="bg-white/10 p-4 rounded-lg mt-6">
                      <div className="flex items-start gap-3">
                        <Icon name="Mail" size={24} className="text-white mt-1 flex-shrink-0" />
                        <div>
                          <p className="font-semibold mb-2">–ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã:</p>
                          <p className="text-sm">
                            –í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫ –≤–∞–º –Ω–∞ –ø–æ—á—Ç—É. –í —Å–ª—É—á–∞–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –ø–æ –ø–æ—á—Ç–µ –∏–ª–∏ –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–∞—Å –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Right side - Robot Image with Speech */}
                <div className="flex items-center justify-center lg:justify-end">
                  <div className="relative">
                    {/* Speech Bubble */}
                    <div className="absolute -top-24 left-1/2 transform -translate-x-1/2 w-96 z-10">
                      <div className="bg-white/95 backdrop-blur-sm rounded-2xl p-4 shadow-2xl border-2 border-blue-200 relative speech-bubble">
                        <div className="flex items-start gap-3">
                          <div className="flex-shrink-0">
                            <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center">
                              <Icon name="MessageSquare" size={16} className="text-white" />
                            </div>
                          </div>
                          <div className="flex-1">
                            <div className="text-blue-800 font-medium text-sm mb-1">AI-–ü–æ–º–æ—â–Ω–∏–∫:</div>
                            <div className="text-gray-800 text-sm leading-relaxed min-h-[40px]">
                              {typedText}
                              {typedText.length < (robotMessages[currentMessageIndex]?.length || 0) && (
                                <span className="inline-block w-0.5 h-4 bg-blue-500 ml-0.5 animate-pulse"></span>
                              )}
                            </div>
                          </div>
                        </div>
                        {/* Speech bubble arrow */}
                        <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-1/2 rotate-45 w-4 h-4 bg-white/95 border-r border-b border-blue-200"></div>
                      </div>
                    </div>

                    {/* Robot Avatar */}
                    <div className="w-80 h-80 rounded-full bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-sm border border-white/20 flex items-center justify-center p-8 relative">
                      <img 
                        src="/img/86319c3d-a117-457a-b30d-0c5a73a26cb0.jpg" 
                        alt="AI Robot Assistant" 
                        className="w-full h-full object-cover rounded-full shadow-2xl"
                      />
                      {/* Animated mouth/speaking indicator */}
                      <div className="absolute bottom-16 left-1/2 transform -translate-x-1/2">
                        {typedText.length < (robotMessages[currentMessageIndex]?.length || 0) && (
                          <div className="flex gap-1">
                            <div className="w-2 h-2 bg-green-400 rounded-full animate-bounce" style={{ animationDelay: '0ms' }}></div>
                            <div className="w-2 h-2 bg-green-400 rounded-full animate-bounce" style={{ animationDelay: '150ms' }}></div>
                            <div className="w-2 h-2 bg-green-400 rounded-full animate-bounce" style={{ animationDelay: '300ms' }}></div>
                          </div>
                        )}
                      </div>
                    </div>
                    
                    {/* Status indicator */}
                    <div className="absolute -top-2 -right-2">
                      <div className="w-12 h-12 bg-green-400 rounded-full flex items-center justify-center animate-pulse">
                        <Icon name="Zap" size={24} className="text-white" />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Guarantee Form */}
        <div className="max-w-5xl mx-auto mb-16">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-green-600 mb-4 tracking-tight">
              –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
            </h2>
            <div className="w-24 h-1 bg-bank-blue mx-auto"></div>
          </div>
          
          <Card className="shadow-xl border-2 border-bank-silver bg-white/95 backdrop-blur-sm">
            <CardHeader className="bg-gradient-to-r from-bank-navy to-bank-blue text-white">
              <CardTitle className="text-xl flex items-center gap-3 text-green-300">
                <Icon name="Edit3" size={24} />
                –î–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
              </CardTitle>
              <CardDescription className="text-bank-light">
                –£–∫–∞–∂–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
              </CardDescription>
            </CardHeader>
            <CardContent className="p-8">
              <div className="grid md:grid-cols-2 gap-8">
                <div className="space-y-6">
                  <div>
                    <Label htmlFor="tender-link" className="text-base font-semibold text-bank-navy">
                      –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä
                    </Label>
                    <Input 
                      id="tender-link"
                      placeholder="https://zakupki.gov.ru/..."
                      value={tenderLink}
                      onChange={(e) => setTenderLink(e.target.value)}
                      className="mt-2 h-12 border-2 border-bank-silver focus:border-bank-blue"
                    />
                  </div>

                  <div>
                    <Label htmlFor="guarantee-amount" className="text-base font-semibold text-bank-navy">
                      –°—É–º–º–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏
                    </Label>
                    <Input 
                      id="guarantee-amount"
                      placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1 000 000 ‚ÇΩ"
                      value={guaranteeAmount}
                      onChange={(e) => setGuaranteeAmount(e.target.value)}
                      className="mt-2 h-12 border-2 border-bank-silver focus:border-bank-blue"
                    />
                  </div>

                  <div>
                    <Label htmlFor="federal-law" className="text-base font-semibold text-bank-navy">
                      –ü–æ –∫–∞–∫–æ–º—É –§–ó
                    </Label>
                    <Input 
                      id="federal-law"
                      placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –§–ó ‚Ññ44, –§–ó ‚Ññ223"
                      value={federalLaw}
                      onChange={(e) => setFederalLaw(e.target.value)}
                      className="mt-2 h-12 border-2 border-bank-silver focus:border-bank-blue"
                    />
                  </div>
                </div>

                <div className="space-y-6">
                  <div>
                    <Label htmlFor="guarantee-type" className="text-base font-semibold text-bank-navy">
                      –í–∏–¥ –≥–∞—Ä–∞–Ω—Ç–∏–∏
                    </Label>
                    <Select value={selectedGuaranteeType} onValueChange={setSelectedGuaranteeType}>
                      <SelectTrigger className="mt-2 h-12 text-base border-2 border-bank-silver focus:border-bank-blue">
                        <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –≥–∞—Ä–∞–Ω—Ç–∏–∏" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="participation">–ì–∞—Ä–∞–Ω—Ç–∏—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏</SelectItem>
                        <SelectItem value="execution">–ì–∞—Ä–∞–Ω—Ç–∏—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞</SelectItem>
                        <SelectItem value="warranty">–ì–∞—Ä–∞–Ω—Ç–∏—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤</SelectItem>
                        <SelectItem value="advance">–ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞–≤–∞–Ω—Å–∞</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div>
                    <Label htmlFor="guarantee-period" className="text-base font-semibold text-bank-navy">
                      –°—Ä–æ–∫ –≥–∞—Ä–∞–Ω—Ç–∏–∏
                    </Label>
                    <Input 
                      id="guarantee-period"
                      placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 12 –º–µ—Å—è—Ü–µ–≤"
                      value={guaranteePeriod}
                      onChange={(e) => setGuaranteePeriod(e.target.value)}
                      className="mt-2 h-12 border-2 border-bank-silver focus:border-bank-blue"
                    />
                  </div>

                  <div>
                    <Label htmlFor="access-key" className="text-base font-semibold text-bank-navy">
                      <Icon name="Key" size={16} className="inline mr-2" />
                      –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞
                    </Label>
                    <Input 
                      id="access-key"
                      type="password"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞"
                      value={accessKey}
                      onChange={(e) => setAccessKey(e.target.value)}
                      className="mt-2 h-12 border-2 border-bank-silver focus:border-bank-blue"
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Documents Upload Section */}
        <div className="max-w-5xl mx-auto mb-16">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-green-600 mb-4 tracking-tight">
              –ü–µ—Ä–µ—á–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            </h2>
            <div className="w-24 h-1 bg-bank-blue mx-auto"></div>
          </div>
          
          <div className="grid md:grid-cols-2 gap-6">
            {requiredDocuments.map((doc, idx) => (
              <Card key={doc.id} className="shadow-lg border-2 border-bank-silver hover:shadow-xl transition-all duration-300 bg-white/90 backdrop-blur-sm">
                <CardContent className="p-6">
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-2">
                        <div className="w-8 h-8 bg-bank-navy text-white rounded-full flex items-center justify-center text-sm font-bold">
                          {idx + 1}
                        </div>
                        <div className="text-base font-semibold text-bank-navy">
                          {doc.name}
                        </div>
                      </div>
                      <div className="text-sm text-bank-slate ml-11">
                        {uploadedFiles[doc.id]?.length > 0 
                          ? (
                            <div className="flex items-center gap-2 text-bank-green">
                              <Icon name="CheckCircle" size={16} />
                              –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {uploadedFiles[doc.id].length}
                            </div>
                          )
                          : (
                            <div className="flex items-center gap-2 text-bank-slate">
                              <Icon name="Upload" size={16} />
                              –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
                            </div>
                          )
                        }
                      </div>
                    </div>
                    <div className="ml-4">
                      <input 
                        type="file" 
                        multiple 
                        className="hidden" 
                        id={`upload-doc-${doc.id}`}
                        onChange={(e) => handleFileUpload(doc.id, e.target.files)}
                      />
                      <Button 
                        variant="outline"
                        size="sm"
                        className="border-2 border-bank-navy text-bank-navy hover:bg-bank-navy hover:text-white transition-all duration-300"
                        onClick={() => document.getElementById(`upload-doc-${doc.id}`)?.click()}
                      >
                        <Icon name="Paperclip" size={16} className="mr-2" />
                        –ó–∞–≥—Ä—É–∑–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Final Submit Button */}
        <div className="text-center mb-16">
          <Button 
            size="lg" 
            onClick={handleSubmit}
            disabled={isSubmitting || !accessKey}
            className="bg-gradient-to-r from-bank-navy to-bank-blue hover:from-bank-blue hover:to-bank-navy text-white font-semibold text-lg px-16 py-4 shadow-xl hover:shadow-2xl transition-all duration-300 disabled:opacity-50"
          >
            {isSubmitting ? (
              <>
                <Icon name="Loader2" size={24} className="mr-4 animate-spin" />
                –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...
              </>
            ) : (
              <>
                <Icon name="Send" size={24} className="mr-4" />
                –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é
              </>
            )}
          </Button>
          <p className="text-sm text-bank-slate mt-4">
            üìß –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ <strong>garantiya25@mail.ru</strong>
          </p>
          {accessKey && accessKey !== 'ba42c3d9-0cfe-43b4-816a-cbe491f04fca' && (
            <p className="text-sm text-red-600 mt-2">
              ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞
            </p>
          )}
          {accessKey === 'ba42c3d9-0cfe-43b4-816a-cbe491f04fca' && (
            <p className="text-sm text-green-600 mt-2">
              ‚úÖ –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
            </p>
          )}
        </div>

        {/* Stats Section */}
        <div className="bg-gradient-to-r from-bank-navy to-bank-blue p-12 rounded-2xl shadow-2xl">
          <div className="grid md:grid-cols-4 gap-8 text-center">
            {[
              { icon: 'Building2', label: '–ë–∞–Ω–∫–æ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤', value: '30+', color: 'text-white' },
              { icon: 'FileText', label: '–í—ã–¥–∞–Ω–Ω—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π', value: '5000+', color: 'text-white' },
              { icon: 'Clock', label: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è', value: '24—á', color: 'text-white' },
              { icon: 'Shield', label: '–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫', value: '98%', color: 'text-white' }
            ].map((stat, idx) => (
              <div key={idx} className="text-white">
                <Icon name={stat.icon as any} size={40} className="mx-auto mb-4 opacity-90" />
                <div className="text-3xl font-bold mb-2">{stat.value}</div>
                <div className="text-sm opacity-90 uppercase tracking-wider">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>

        {/* Contacts Section */}
        <div className="max-w-4xl mx-auto mt-16">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-green-600 mb-4 tracking-tight">
              –ö–æ–Ω—Ç–∞–∫—Ç—ã
            </h2>
            <div className="w-24 h-1 bg-bank-blue mx-auto"></div>
          </div>
          
          <Card className="shadow-2xl border-2 border-bank-silver bg-gradient-to-br from-white/95 to-bank-light/90 backdrop-blur-sm">
            <CardContent className="p-12">
              <div className="text-center space-y-8">
                <div className="flex items-center justify-center">
                  <div className="p-4 bg-gradient-to-r from-bank-navy to-bank-blue rounded-full">
                    <Icon name="Mail" size={48} className="text-white" />
                  </div>
                </div>
                
                <div className="space-y-4">
                  <h3 className="text-2xl font-bold text-bank-navy">
                    –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
                  </h3>
                  <p className="text-lg text-bank-slate leading-relaxed">
                    –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –≥–∞—Ä–∞–Ω—Ç–∏—è–º –∏ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
                  </p>
                </div>

                <div className="grid md:grid-cols-2 gap-6">
                  <div className="bg-gradient-to-r from-bank-navy to-bank-blue p-6 rounded-2xl shadow-xl">
                    <div className="text-center">
                      <Icon name="AtSign" size={24} className="text-white mx-auto mb-3" />
                      <div className="text-sm text-white/80 mb-2">Email</div>
                      <a 
                        href="mailto:garantiya25@mail.ru" 
                        className="text-xl font-bold text-white hover:text-yellow-300 transition-colors duration-300 break-all"
                      >
                        garantiya25@mail.ru
                      </a>
                    </div>
                  </div>

                  <div className="bg-gradient-to-r from-blue-500 to-blue-600 p-6 rounded-2xl shadow-xl">
                    <div className="text-center">
                      <Icon name="MessageCircle" size={24} className="text-white mx-auto mb-3" />
                      <div className="text-sm text-white/80 mb-2">Telegram –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</div>
                      <a 
                        href="https://t.me/IT_business_service_selle" 
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-xl font-bold text-white hover:text-yellow-300 transition-colors duration-300"
                      >
                        @IT_business_service_selle
                      </a>
                      <div className="flex items-center justify-center gap-1 mt-2">
                        <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                        <span className="text-xs text-white/80">–û–Ω–ª–∞–π–Ω</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="grid md:grid-cols-3 gap-6 mt-8">
                  <div className="text-center p-4 bg-white/90 backdrop-blur-sm rounded-lg border border-bank-silver shadow-md">
                    <Icon name="Clock" size={24} className="mx-auto mb-2 text-bank-blue" />
                    <div className="text-sm font-semibold text-bank-navy">–†–∞–±–æ—Ç–∞–µ–º</div>
                    <div className="text-sm text-bank-slate">24/7</div>
                  </div>
                  <div className="text-center p-4 bg-white/90 backdrop-blur-sm rounded-lg border border-bank-silver shadow-md">
                    <Icon name="Zap" size={24} className="mx-auto mb-2 text-bank-blue" />
                    <div className="text-sm font-semibold text-bank-navy">–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç</div>
                    <div className="text-sm text-bank-slate">–í —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞</div>
                  </div>
                  <div className="text-center p-4 bg-white/90 backdrop-blur-sm rounded-lg border border-bank-silver shadow-md">
                    <Icon name="Shield" size={24} className="mx-auto mb-2 text-bank-blue" />
                    <div className="text-sm font-semibold text-bank-navy">–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å</div>
                    <div className="text-sm text-bank-slate">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã</div>
                  </div>
                </div>

                {/* File Upload Instructions */}
                <div className="mt-8 p-6 bg-yellow-50 border-2 border-yellow-200 rounded-xl">
                  <div className="flex items-center justify-center gap-3 mb-4">
                    <Icon name="FileText" size={24} className="text-yellow-600" />
                    <h4 className="text-lg font-bold text-yellow-800">
                      –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    </h4>
                  </div>
                  <div className="text-sm text-yellow-800 space-y-2">
                    <p className="font-semibold">üìé –§–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:</p>
                    <div className="grid md:grid-cols-3 gap-4 mt-4">
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <Icon name="Mail" size={16} className="text-yellow-600" />
                          <span className="font-semibold">Email:</span>
                        </div>
                        <p>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã –∫ –ø–∏—Å—å–º—É –Ω–∞ garantiya25@mail.ru</p>
                      </div>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <Icon name="MessageCircle" size={16} className="text-yellow-600" />
                          <span className="font-semibold">Telegram:</span>
                        </div>
                        <p>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É @IT_business_service_selle</p>
                      </div>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <Icon name="Cloud" size={16} className="text-yellow-600" />
                          <span className="font-semibold">–û–±–ª–∞–∫–æ:</span>
                        </div>
                        <p>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –æ–±–ª–∞–∫–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É</p>
                      </div>
                    </div>
                    <p className="text-xs mt-4 text-yellow-700">
                      ‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                    </p>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      
      {/* Footer */}
      <footer className="bg-bank-navy text-white py-8 mt-16">
        <div className="container mx-auto px-6 text-center">
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="p-2 bg-white rounded-lg">
              <Icon name="Building2" size={24} className="text-bank-navy" />
            </div>
            <span className="text-xl font-bold text-yellow-400">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ì–∞—Ä–∞–Ω—Ç–∏–∏ –†–£</span>
          </div>
          <p className="text-bank-light mb-4">
            –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –≤–µ–¥—É—â–∏—Ö —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –±–∞–Ω–∫–æ–≤
          </p>
          <div className="flex items-center justify-center gap-2 text-sm">
            <Icon name="Mail" size={16} />
            <a href="mailto:garantiya25@mail.ru" className="hover:text-yellow-300 transition-colors">
              garantiya25@mail.ru
            </a>
          </div>
        </div>
      </footer>

      {/* Floating Telegram Consultant */}
      <div className="fixed bottom-6 right-6 z-50">
        <div className="group relative">
          {/* Consultation bubble */}
          <div className="absolute bottom-16 right-0 mb-2 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
            <div className="bg-gradient-to-r from-bank-navy to-bank-blue text-white px-4 py-3 rounded-lg shadow-xl border border-white/20 backdrop-blur-sm max-w-xs">
              <div className="text-sm font-semibold mb-1">üí¨ –û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</div>
              <div className="text-xs opacity-90">
                –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–µ–π? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram!
              </div>
              {/* Arrow pointer */}
              <div className="absolute bottom-0 right-4 transform translate-y-1/2 rotate-45 w-2 h-2 bg-gradient-to-r from-bank-navy to-bank-blue border-r border-b border-white/20"></div>
            </div>
          </div>

          {/* Main consultant button */}
          <a
            href="https://t.me/IT_business_service_selle"
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white rounded-full shadow-2xl hover:shadow-3xl transform hover:scale-110 transition-all duration-300 animate-pulse hover:animate-none"
          >
            <Icon name="MessageCircle" size={28} />
          </a>

          {/* Online indicator */}
          <div className="absolute -top-1 -right-1 w-5 h-5 bg-green-400 border-2 border-white rounded-full flex items-center justify-center">
            <div className="w-2 h-2 bg-green-500 rounded-full animate-ping"></div>
          </div>

          {/* Floating animation rings */}
          <div className="absolute inset-0 rounded-full border-2 border-blue-400 opacity-75 animate-ping"></div>
          <div className="absolute inset-0 rounded-full border-2 border-blue-300 opacity-50 animate-ping" style={{ animationDelay: '0.5s' }}></div>
        </div>
      </div>
    </div>
  );
};

export default Index;